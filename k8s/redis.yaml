# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: testapp-redis-config
# data:
#   entrypoint.sh: |-
#     #!/bin/bash
#     redis-server &
#     sleep 5
#     redis-cli SET testapp "Hello from container 2! This message is taken from Redis cache."
#     redis-cli SET testappexp "Hello from container 2 (experimental version)! This message is taken from Redis cache."
#     sleep 30d
---
apiVersion: v1
kind: Service
metadata:
  name: redis-svc
spec:
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: redis
---
apiVersion: v1
kind: Service
metadata:
  name: redis-exporter-svc
  annotations:
    appdynamics.com/exporter_type: "redis"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "9121"
spec:
  ports:
  - port: 9121
    protocol: TCP
    targetPort: 9121
  selector:
    app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: redis
      annotations:
        prometheus.io/port: "9121"
        prometheus.io/scrape: "true"
    spec:
      containers:
      - image: redis
        name: redis
        imagePullPolicy: Always
        args: ["--requirepass", "$(REDIS_PASS)"]
        # command:
        # - /bin/entrypoint.sh
        env:
        - name: MASTER
          value: "true"
        - name: REDIS_PASS
          value: password
        ports:
        - containerPort: 6379
          name: redis
        volumeMounts:
        - name: redis-persistent-storage
          mountPath: /var/lib/redis3 #to be changed
        # - name: config
        #   mountPath: /bin/entrypoint.sh
        #   readOnly: true
        #   subPath: entrypoint.sh
      - name: redis-exporter
        image: oliver006/redis_exporter:latest
        args: ["--redis.password", "$(REDIS_PASS)"]
        env:
        - name: REDIS_PASS
          value: password
        securityContext:
          runAsUser: 59000
          runAsGroup: 59000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 9121
      volumes:
      - name: redis-persistent-storage
        persistentVolumeClaim:
          claimName: redis-pv-claim
      # - name: config
      #   configMap:
      #     name: testapp-redis-config
      #     defaultMode: 0700
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 200Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Mi